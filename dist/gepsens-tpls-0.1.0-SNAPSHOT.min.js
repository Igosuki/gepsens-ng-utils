angular.module("gepsens",["gepsens.tpls","gepsens.auth","gepsens.autogrow","gepsens.badges","gepsens.feedback"]),angular.module("gepsens.tpls",["template/badges/badges.html"]),angular.module("gepsens.auth",["ngCookies","ngResource"]).provider("Auth",function(){this.$get=function(a,b,c){b("auth/:provider",{},{authenticate:{method:"GET"}});var d=b("users/:id"),e=c.get("user")||{},f=function(a,b){self.currentUser=a,self.currentUser.isLoggedIn=!0,c.put("user",self.currentUser),c.remove("user"),b&&b(self.currentUser)};return{currentUser:e,setCurrentUser:function(a){e=a},logout:function(){a.get("/logout")},login:function(b,c,d){return a.post("/login",{username:b,password:c}).success(function(a){f(a,d)})},loginOauth:function(b,c){return""===b.trim()?a.get("auth",{withCredentials:!0}).success(function(a){f(a,c)}):(window.location.href="auth/"+b,void 0)},users:function(){return d.query()}}}}),angular.module("gepsens.autogrow",[]).directive("autogrow",function(){return function(a,b){var c=b[0].offsetWidth;b.css("padding-left"),b.css("padding-right");var d=angular.element("<div></div>").css({"font-size":b.css("font-size"),"font-family":b.css("font-family"),height:b.css("height"),"padding-left":b.css("padding-left"),"padding-right":b.css("padding-right"),"padding-bottom":b.css("padding-bottom"),"padding-top":b.css("padding-top"),border:b.css("border"),position:"absolute",top:"-10000px",left:"-10000px","white-space":"pre-wrap","word-wrap":"break-word","box-sizing":b.css("box-sizing"),"-moz-box-sizing":b.css("-moz-box-sizing"),"-webkit-box-sizing":b.css("-webkit-box-sizing"),"line-height":b.css("line-height")});angular.element(document.body).append(d);var e=function(){var a=function(a,b){for(var c=0,d="";b>c;c++)d+=a;return d},e=b.val().replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/&/g,"&amp;").replace(/\n$/,"<br/>&nbsp;").replace(/\n/g,"<br/>").replace(/\s{2,}/g,function(b){return a("&nbsp;",b.length-1)+" "});d.html(e),d.css("height",b.css("height")),b.css("width",Math.max(d[0].offsetWidth+10,c)+"px"),b.css("overflow","hidden")};b.bind("keyup keydown keypress change",e),e()}}),angular.module("gepsens.badges",[]).directive("badges",function(){return{scope:{badgeList:"=",badgeClass:"@",badgeControl:"@",simple:"="},templateUrl:"template/badges/badges.html",restrict:"E",controller:function(a){a.remove=function(b){a.badgeList.splice(b,1)}},link:function(a,b){a.$watch("badgeList",function(b,c){a.$parent.form&&(!b||!c||b&&b.length>0?a.$parent.form.$setValidity(a.badgeControl,!0):a.$parent.form.$setValidity(a.badgeControl,!1))},!0),a.focusInput=function(){b.find("input").focus()}}}}).directive("list-feed",function(){return{restrict:"A",scope:{listFeed:"="},link:function(){}}}),angular.module("gepsens.feedback",[]).directive("btnFeedback",[function(){return{scope:{btnFeedback:"="},template:"<button ng-transclude ng-class=\"{'error': 'btn-danger', 'done': 'btn-success icon-ok', 'doing': 'icon-spinner icon-spin'}[btnFeedback]\"></button>",replace:!0,transclude:!0,restrict:"A",link:function(){}}}]),angular.module("template/badges/badges.html",[]).run(["$templateCache",function(a){a.put("template/badges/badges.html",'<div class="tagsinput tagsinput-primary fitcontent form-control">\n	<span class="tag" data-ng-repeat="badge in badgeList">\n	  <span>{{badge}}</span>\n	  <a class="tagsinput-remove-link" ng-show="!simple" ng-click="remove($index)"> <i class="icon-remove" ></i></a>\n	</span>\n	<div class="tagsinput-add-container">\n		<div class="tagsinput-add" ng-click="focusInput()">\n			<i class="icon-plus"></i>\n		</div>\n		<input class="input-sm" type=\'text\' autogrow name="badgeListCmpl" ng-model="badgeListCmpl" ui-keydown="{\'enter\': \'badgeList.push(badgeListCmpl)\'}" />\n	</div>\n</div>')}]);